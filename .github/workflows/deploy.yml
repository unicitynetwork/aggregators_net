name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - test
          - main
        default: 'test'
      aggregator_tag:
        description: 'Docker image hash or tag'
        required: true
        type: string
#       default: 'main'

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment  }}
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.event.inputs.environment }}"

    steps:

      - name: Check out repository code
        uses: actions/checkout@v4 # Always use the latest major version

      - name: Trim image tag
        id: trim_tag
        run: |
          raw_input="${{ github.event.inputs.aggregator_tag }}"
          trimmed_input=$(echo "$raw_input" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          echo "aggregator_tag=${trimmed_input}" >> $GITHUB_OUTPUT

      - name: Echo parameters
        run: |
          echo "Target Server: ${{ vars.TARGET_SERVER }}"
          echo "Tag: ${{ steps.trim_tag.outputs.aggregator_tag }}"
          ls -la
          env|sort

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a specific version like '3.9' or '3.11' if needed

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible # Or specify a version like ansible==7.4.0

      - name: Configure SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_PRIVATE_KEY }} # Reference the secret

      - name: Configure ssh
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan "${{ vars.JUMP_HOST }}" >> ~/.ssh/known_hosts
          cat > ~/.ssh/config <<- EOF
          Host mainjump
            HostName ${{ vars.JUMP_HOST }}
            User alpha
          Host *.mainnet.alphabill.org
            ProxyJump mainjump
            StrictHostKeyChecking accept-new
            User alpha
          EOF
          cat ~/.ssh/config

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/aggregator.yml \
          -i "${{ vars.TARGET_SERVER }}," \
          -e "aggregator_mongodb_uri=${{ secrets.aggregator_mongodb_uri }}" \
          -e "aggregator_private_key=${{ secrets.aggregator_private_key }}" \
          -e "aggregator_initial_block_hash=${{ vars.aggregator_initial_block_hash }}" \
          -e "aggregator_tag=${{ steps.trim_tag.outputs.aggregator_tag }}"
