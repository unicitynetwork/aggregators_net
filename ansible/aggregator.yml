---
- name: aggregator
  become: false
  gather_facts: true
  hosts: "{{env}}"
  serial: 1 # one at a time

  vars_files:
    - "vars/{{env}}.yml"

  vars:
    service_path: "/home/{{service_user}}/aggregator"
    aggregator_repo: "ghcr.io/unicitynetwork/aggregators_net"
    aggregator_image: "{{aggregator_repo}}:{{aggregator_tag}}"

  tasks:

    - name: Create dir
      ansible.builtin.file:
        path: "{{service_path}}"
        owner: "{{service_user}}"
        group: "{{service_user}}"
        mode: "755"
        state: directory

    - name: Upload docker-compose.yml
      ansible.builtin.template:
        src: "{{item}}"
        dest: "{{service_path}}/{{item}}"
        owner: "{{service_user}}"
        group: "{{service_user}}"
        mode: "0644"
      with_items:
        - docker-compose.yml

    - name: Pull the image
      community.docker.docker_image_pull:
        name: "{{aggregator_image}}"

    - name: Stop aggregator
      community.docker.docker_compose_v2:
        project_src: aggregator
        files:
          - docker-compose.yml
        state: absent
      tags:
#       - never
        - restart
        - stop

    - name: Start aggregator
      community.docker.docker_compose_v2:
        project_src: aggregator
        files:
          - docker-compose.yml
        state: present
      tags:
#       - never
        - restart
        - start

    - name: Wait for node to recover
      ansible.builtin.uri:
        url: "http://127.0.0.1:3000/health"
        method: GET
        status_code: 200 # We expect a 200 for success
      register: health_check
      until: health_check.status == 200
      retries: 99 # Number of retries
      delay: 2 # Delay in seconds between retries
      delegate_to: "{{ inventory_hostname }}" # Ensure this runs on the remote host
      tags:
#       - never
        - restart
        - start

