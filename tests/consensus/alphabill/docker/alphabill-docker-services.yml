services:
  alphabill:
    platform: linux/amd64
    image: ghcr.io/alphabill-org/alphabill:0b28596910f7e0e9e668a11e7e9e72ca00732f7c # https://github.com/alphabill-org/alphabill/pkgs/container/alphabill

  initialize-root-node:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'if [ -z "$(ls -A /genesis)" ]; then alphabill root-node init --home "/genesis" -g; else echo "Genesis exists"; exit 0; fi'

  generate-root-trust-base:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'if [ ! -f /genesis/trust-base.json ]; then alphabill trust-base generate --home "/genesis" --network-id 3 --node-info /genesis/root/node-info.json; else echo "Root trust base exists"; exit 0; fi'

  sign-root-trust-base:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'alphabill trust-base sign --home "/genesis/root" --trust-base /genesis/trust-base.json'

  run-root-node:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'alphabill root-node run --home "/genesis/root" --address "/ip4/$(hostname -i)/tcp/8000" --trust-base /genesis/trust-base.json --rpc-server-address "$(hostname -i):8002"'
    volumes:
      - ./genesis:/genesis
    expose:
      - 8000

  initialize-shard-node:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'if [ -z "$(ls -A /genesis/tokens)" ]; then alphabill shard-node init --home "/genesis/tokens" --generate; else echo "Shard initialized"; exit 0; fi'

  generate-shard-conf:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'if [ ! -f /genesis/shard-conf-2_0.json ]; then alphabill shard-conf generate --home "/genesis" --network-id 3 --partition-id 2 --partition-type-id 2 --epoch-start 10 --feeless-mode true --admin-owner-predicate 0x830041025820786C9F82FCD2CFB4190A690725E85734F2D25B86DBC35186D85D08F3CFC2B7CA --node-info=/genesis/tokens/node-info.json; else echo "Shard genesis exists"; exit 0; fi'

  upload-shard-conf:
    image: curlimages/curl
    command: >-
      curl -X PUT
      -H 'Content-Type: application/json'
      -d '@/genesis/shard-conf-2_0.json'
      'http://alphabill-root:8002/api/v1/configurations'

  generate-shard-genesis:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'if [ ! -f  /genesis/tokens/state.cbor ]; then alphabill shard-conf genesis --home "/genesis/tokens" --shard-conf /genesis/shard-conf-2_0.json; else echo "Shard genesis exists"; exit 0; fi'

  run-shard-node:
    extends:
      service: alphabill
    entrypoint:
      - /busybox/sh
      - -c
      - 'alphabill shard-node run --home "/genesis/tokens" --trust-base /genesis/trust-base.json --shard-conf /genesis/shard-conf-2_0.json --address "/ip4/$(hostname -i)/tcp/8001" --bootnodes "/dns/alphabill-root/tcp/8000/p2p/$(alphabill node-id --home /genesis/root | tail -n1)" --rpc-server-address "$(hostname -i):8003"'
    expose:
      - 8001
